### EKF for Fusing Wheel Odometry and IMU ###
ekf_filter_node:
  ros__parameters:
    use_sim_time: true
    
    # The frequency of the filter output.
    frequency: 30.0

    # Sensor data timeout. If data from a sensor is not received for this amount
    # of time, the filter will not update.
    sensor_timeout: 0.1

    # Whether to broadcast the odom->base_link transform.
    # THIS IS THE KEY! The EKF now provides the primary TF.
    publish_tf: true
    
    # Frames
    map_frame: map          # Not used by the filter, but required for compliance
    odom_frame: odom        # The odom frame, which is the output of the filter
    base_link_frame: base_link  # The robot's base frame
    world_frame: odom       # The world frame is the odom frame

    # Sensor configuration
    # Wheel odometry from diff_drive_controller
    odom0: /diff_drive_controller/odom
    odom0_config:
      [false, false, false,  # x, y, z
       false, false, false,  # roll, pitch, yaw
       true,  true,  false,  # vx, vy, vz
       false, false, true,   # vroll, vpitch, vyaw
       false, false, false]  # ax, ay, az
    odom0_differential: false
    odom0_relative: false
    odom0_queue_size: 10

    # IMU data
    imu0: /imu/data
    imu0_config:
      [false, false, false,  # x, y, z
       true,  true,  true,   # roll, pitch, yaw
       false, false, false,  # vx, vy, vz
       true,  true,  true,   # vroll, vpitch, vyaw
       true,  true,  false]  # ax, ay, az (note: not using z-accel)
    imu0_differential: false
    imu0_relative: false
    imu0_queue_size: 10
    
    # Process noise covariance
    process_noise_covariance: [
      0.05, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,   0.0,   0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.05, 0.0,  0.0,  0.0,  0.0,  0.0,   0.0,   0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.06, 0.0,  0.0,  0.0,  0.0,   0.0,   0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.03, 0.0,  0.0,  0.0,   0.0,   0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.03, 0.0,  0.0,   0.0,   0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.06, 0.0,   0.0,   0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.025, 0.0,   0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,   0.025, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,   0.0,   0.04, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,   0.0,   0.0,  0.01, 0.0,  0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,   0.0,   0.0,  0.0,  0.01, 0.0,  0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,   0.0,   0.0,  0.0,  0.0,  0.02, 0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,   0.0,   0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,   0.0,   0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,   0.0,   0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.015] 